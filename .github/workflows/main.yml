name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-fedora:
    strategy:
      matrix:
        fedora-version: [latest, rawhide]
        qt-version: [5, 6]
        compiler: [gcc, clang]

    runs-on: ubuntu-latest
    container: fedora:${{matrix.fedora-version}}

    steps:
    - name: Install packages
      run: dnf -y --setopt=install_weak_deps=False install git cmake ninja-build qt${{matrix.qt-version}}-qtbase-devel ${{ matrix.compiler == 'gcc' && 'gcc-c++' || 'clang' }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build libtremotesf
      uses: equeim/action-cmake-build@v5.2
      with:
        cmake-arguments: --preset default -D CMAKE_CXX_COMPILER=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }} -D TREMOTESF_QT6=${{ matrix.qt-version == 6 && 'ON' || 'OFF' }}

  build-ubuntu:
    strategy:
      matrix:
        ubuntu-version: [latest, rolling]
        compiler: [gcc, clang]

    runs-on: ubuntu-latest
    container: ubuntu:${{matrix.ubuntu-version}}

    steps:
    - name: Install packages
      run: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends --assume-yes install ca-certificates git cmake ninja-build qtbase5-dev ${{ matrix.compiler == 'gcc' && 'g++' || 'clang' }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build libtremotesf
      uses: equeim/action-cmake-build@v5.2
      with:
        # Can't use presets on older Ubuntu version
        cmake-arguments: -D CMAKE_CXX_COMPILER=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }} -D TREMOTESF_QT6=OFF

  build-windows:
    strategy:
      matrix:
        qt-version: [5, 6]

    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up vcpkg and MSVC environment
      uses: equeim/action-setup-vcpkg-msvc@v4
      with:
        vcpkg-appended-cache-key: ${{ matrix.qt-version }}

    - name: Build libtremotesf
      uses: equeim/action-cmake-build@v5.2
      with:
        # We set VCPKG_INSTALLED_DIR variable to share vcpkg prefix between Debug and Release configs
        cmake-arguments: --preset windows --toolchain '${{env.VCPKG_ROOT}}\scripts\buildsystems\vcpkg.cmake' -D VCPKG_INSTALLED_DIR='${{github.workspace}}\vcpkg_installed' -D VCPKG_INSTALL_OPTIONS='--disable-metrics;--clean-after-build;--x-feature=qt${{ matrix.qt-version }}' -D TREMOTESF_QT6=${{ matrix.qt-version == 6 && 'ON' || 'OFF' }}

    - name: Archive vcpkg logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: vcpkg-logs-qt${{matrix.qt-version}}
        path: |
          ${{env.VCPKG_ROOT}}\buildtrees\*\*.log
          .\build\vcpkg-manifest-install.log
