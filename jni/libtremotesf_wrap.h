/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_libtremotesf_WRAP_H_
#define SWIG_libtremotesf_WRAP_H_

class SwigDirector_JniRpc : public libtremotesf::JniRpc, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_JniRpc(JNIEnv *jenv);
    virtual void onAboutToDisconnect();
    virtual void onAboutToDisconnectSwigPublic() {
      libtremotesf::JniRpc::onAboutToDisconnect();
    }
    virtual void onConnectedChanged();
    virtual void onConnectedChangedSwigPublic() {
      libtremotesf::JniRpc::onConnectedChanged();
    }
    virtual void onStatusChanged();
    virtual void onStatusChangedSwigPublic() {
      libtremotesf::JniRpc::onStatusChanged();
    }
    virtual void onErrorChanged();
    virtual void onErrorChangedSwigPublic() {
      libtremotesf::JniRpc::onErrorChanged();
    }
    virtual void onTorrentsUpdated();
    virtual void onTorrentsUpdatedSwigPublic() {
      libtremotesf::JniRpc::onTorrentsUpdated();
    }
    virtual void onServerStatsUpdated();
    virtual void onServerStatsUpdatedSwigPublic() {
      libtremotesf::JniRpc::onServerStatsUpdated();
    }
    virtual void onTorrentFinished(int id, QString const &hashString, QString const &name);
    virtual void onTorrentFinishedSwigPublic(int id, QString const &hashString, QString const &name) {
      libtremotesf::JniRpc::onTorrentFinished(id,hashString,name);
    }
    virtual void onTorrentAddDuplicate();
    virtual void onTorrentAddDuplicateSwigPublic() {
      libtremotesf::JniRpc::onTorrentAddDuplicate();
    }
    virtual void onTorrentAddError();
    virtual void onTorrentAddErrorSwigPublic() {
      libtremotesf::JniRpc::onTorrentAddError();
    }
    virtual void onGotTorrentFiles(int torrentId);
    virtual void onGotTorrentFilesSwigPublic(int torrentId) {
      libtremotesf::JniRpc::onGotTorrentFiles(torrentId);
    }
    virtual void onTorrentFileRenamed(int torrentId, QString const &filePath, QString const &newName);
    virtual void onTorrentFileRenamedSwigPublic(int torrentId, QString const &filePath, QString const &newName) {
      libtremotesf::JniRpc::onTorrentFileRenamed(torrentId,filePath,newName);
    }
    virtual void onGotTorrentPeers(int torrentId);
    virtual void onGotTorrentPeersSwigPublic(int torrentId) {
      libtremotesf::JniRpc::onGotTorrentPeers(torrentId);
    }
    virtual void onGotDownloadDirFreeSpace(long long bytes);
    virtual void onGotDownloadDirFreeSpaceSwigPublic(long long bytes) {
      libtremotesf::JniRpc::onGotDownloadDirFreeSpace(bytes);
    }
    virtual void onGotFreeSpaceForPath(QString const &path, bool success, long long bytes);
    virtual void onGotFreeSpaceForPathSwigPublic(QString const &path, bool success, long long bytes) {
      libtremotesf::JniRpc::onGotFreeSpaceForPath(path,success,bytes);
    }
public:
    bool swig_overrides(int n) {
      return (n < 14 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<14> swig_override;
};


#endif
