/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class JniServerSettings extends ServerSettings {
  private transient long swigCPtr;

  protected JniServerSettings(long cPtr, boolean cMemoryOwn) {
    super(libtremotesfJNI.JniServerSettings_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(JniServerSettings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtremotesfJNI.delete_JniServerSettings(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setDownloadDirectory(String directory) {
    libtremotesfJNI.JniServerSettings_setDownloadDirectory(swigCPtr, this, directory);
  }

  public void setStartAddedTorrents(boolean start) {
    libtremotesfJNI.JniServerSettings_setStartAddedTorrents(swigCPtr, this, start);
  }

  public void setTrashTorrentFiles(boolean trash) {
    libtremotesfJNI.JniServerSettings_setTrashTorrentFiles(swigCPtr, this, trash);
  }

  public void setRenameIncompleteFiles(boolean rename) {
    libtremotesfJNI.JniServerSettings_setRenameIncompleteFiles(swigCPtr, this, rename);
  }

  public void setIncompleteDirectoryEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setIncompleteDirectoryEnabled(swigCPtr, this, enabled);
  }

  public void setIncompleteDirectory(String directory) {
    libtremotesfJNI.JniServerSettings_setIncompleteDirectory(swigCPtr, this, directory);
  }

  public void setRatioLimited(boolean limited) {
    libtremotesfJNI.JniServerSettings_setRatioLimited(swigCPtr, this, limited);
  }

  public void setRatioLimit(float limit) {
    libtremotesfJNI.JniServerSettings_setRatioLimit(swigCPtr, this, limit);
  }

  public void setIdleSeedingLimited(boolean limited) {
    libtremotesfJNI.JniServerSettings_setIdleSeedingLimited(swigCPtr, this, limited);
  }

  public void setIdleSeedingLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setIdleSeedingLimit(swigCPtr, this, limit);
  }

  public void setDownloadQueueEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setDownloadQueueEnabled(swigCPtr, this, enabled);
  }

  public void setDownloadQueueSize(int size) {
    libtremotesfJNI.JniServerSettings_setDownloadQueueSize(swigCPtr, this, size);
  }

  public void setSeedQueueEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setSeedQueueEnabled(swigCPtr, this, enabled);
  }

  public void setSeedQueueSize(int size) {
    libtremotesfJNI.JniServerSettings_setSeedQueueSize(swigCPtr, this, size);
  }

  public void setIdleQueueLimited(boolean limited) {
    libtremotesfJNI.JniServerSettings_setIdleQueueLimited(swigCPtr, this, limited);
  }

  public void setIdleQueueLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setIdleQueueLimit(swigCPtr, this, limit);
  }

  public void setDownloadSpeedLimited(boolean limited) {
    libtremotesfJNI.JniServerSettings_setDownloadSpeedLimited(swigCPtr, this, limited);
  }

  public void setDownloadSpeedLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setDownloadSpeedLimit(swigCPtr, this, limit);
  }

  public void setUploadSpeedLimited(boolean limited) {
    libtremotesfJNI.JniServerSettings_setUploadSpeedLimited(swigCPtr, this, limited);
  }

  public void setUploadSpeedLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setUploadSpeedLimit(swigCPtr, this, limit);
  }

  public void setAlternativeSpeedLimitsEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setAlternativeSpeedLimitsEnabled(swigCPtr, this, enabled);
  }

  public void setAlternativeDownloadSpeedLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setAlternativeDownloadSpeedLimit(swigCPtr, this, limit);
  }

  public void setAlternativeUploadSpeedLimit(int limit) {
    libtremotesfJNI.JniServerSettings_setAlternativeUploadSpeedLimit(swigCPtr, this, limit);
  }

  public void setAlternativeSpeedLimitsScheduled(boolean scheduled) {
    libtremotesfJNI.JniServerSettings_setAlternativeSpeedLimitsScheduled(swigCPtr, this, scheduled);
  }

  public void setAlternativeSpeedLimitsBeginTime(java.util.Date time) {
    libtremotesfJNI.JniServerSettings_setAlternativeSpeedLimitsBeginTime(swigCPtr, this, time);
  }

  public void setAlternativeSpeedLimitsEndTime(java.util.Date time) {
    libtremotesfJNI.JniServerSettings_setAlternativeSpeedLimitsEndTime(swigCPtr, this, time);
  }

  public void setAlternativeSpeedLimitsDays(int days) {
    libtremotesfJNI.JniServerSettings_setAlternativeSpeedLimitsDays(swigCPtr, this, days);
  }

  public void setPeerPort(int port) {
    libtremotesfJNI.JniServerSettings_setPeerPort(swigCPtr, this, port);
  }

  public void setRandomPortEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setRandomPortEnabled(swigCPtr, this, enabled);
  }

  public void setPortForwardingEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setPortForwardingEnabled(swigCPtr, this, enabled);
  }

  public void setEncryptionMode(int mode) {
    libtremotesfJNI.JniServerSettings_setEncryptionMode(swigCPtr, this, mode);
  }

  public void setUtpEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setUtpEnabled(swigCPtr, this, enabled);
  }

  public void setPexEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setPexEnabled(swigCPtr, this, enabled);
  }

  public void setDhtEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setDhtEnabled(swigCPtr, this, enabled);
  }

  public void setLpdEnabled(boolean enabled) {
    libtremotesfJNI.JniServerSettings_setLpdEnabled(swigCPtr, this, enabled);
  }

  public void setMaximumPeersPerTorrent(int peers) {
    libtremotesfJNI.JniServerSettings_setMaximumPeersPerTorrent(swigCPtr, this, peers);
  }

  public void setMaximumPeersGlobally(int peers) {
    libtremotesfJNI.JniServerSettings_setMaximumPeersGlobally(swigCPtr, this, peers);
  }

}
