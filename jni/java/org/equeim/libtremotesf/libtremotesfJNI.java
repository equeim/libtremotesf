/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class libtremotesfJNI {
  public final static native long TorrentsVector_size(long jarg1, TorrentsVector jarg1_);
  public final static native long TorrentsVector_capacity(long jarg1, TorrentsVector jarg1_);
  public final static native void TorrentsVector_reserve(long jarg1, TorrentsVector jarg1_, long jarg2);
  public final static native boolean TorrentsVector_isEmpty(long jarg1, TorrentsVector jarg1_);
  public final static native void TorrentsVector_clear(long jarg1, TorrentsVector jarg1_);
  public final static native void TorrentsVector_add(long jarg1, TorrentsVector jarg1_, long jarg2, Torrent jarg2_);
  public final static native long TorrentsVector_get(long jarg1, TorrentsVector jarg1_, int jarg2);
  public final static native void TorrentsVector_set(long jarg1, TorrentsVector jarg1_, int jarg2, long jarg3, Torrent jarg3_);
  public final static native void delete_TorrentsVector(long jarg1);
  public final static native long TorrentFilesVector_size(long jarg1, TorrentFilesVector jarg1_);
  public final static native long TorrentFilesVector_capacity(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_reserve(long jarg1, TorrentFilesVector jarg1_, long jarg2);
  public final static native boolean TorrentFilesVector_isEmpty(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_clear(long jarg1, TorrentFilesVector jarg1_);
  public final static native void TorrentFilesVector_add(long jarg1, TorrentFilesVector jarg1_, long jarg2, TorrentFile jarg2_);
  public final static native long TorrentFilesVector_get(long jarg1, TorrentFilesVector jarg1_, int jarg2);
  public final static native void TorrentFilesVector_set(long jarg1, TorrentFilesVector jarg1_, int jarg2, long jarg3, TorrentFile jarg3_);
  public final static native void delete_TorrentFilesVector(long jarg1);
  public final static native long TrackersVector_size(long jarg1, TrackersVector jarg1_);
  public final static native long TrackersVector_capacity(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_reserve(long jarg1, TrackersVector jarg1_, long jarg2);
  public final static native boolean TrackersVector_isEmpty(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_clear(long jarg1, TrackersVector jarg1_);
  public final static native void TrackersVector_add(long jarg1, TrackersVector jarg1_, long jarg2, Tracker jarg2_);
  public final static native long TrackersVector_get(long jarg1, TrackersVector jarg1_, int jarg2);
  public final static native void TrackersVector_set(long jarg1, TrackersVector jarg1_, int jarg2, long jarg3, Tracker jarg3_);
  public final static native void delete_TrackersVector(long jarg1);
  public final static native long TorrentPeersVector_size(long jarg1, TorrentPeersVector jarg1_);
  public final static native long TorrentPeersVector_capacity(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_reserve(long jarg1, TorrentPeersVector jarg1_, long jarg2);
  public final static native boolean TorrentPeersVector_isEmpty(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_clear(long jarg1, TorrentPeersVector jarg1_);
  public final static native void TorrentPeersVector_add(long jarg1, TorrentPeersVector jarg1_, long jarg2, Peer jarg2_);
  public final static native long TorrentPeersVector_get(long jarg1, TorrentPeersVector jarg1_, int jarg2);
  public final static native void TorrentPeersVector_set(long jarg1, TorrentPeersVector jarg1_, int jarg2, long jarg3, Peer jarg3_);
  public final static native void delete_TorrentPeersVector(long jarg1);
  public final static native long StringsVector_size(long jarg1, StringsVector jarg1_);
  public final static native long StringsVector_capacity(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_reserve(long jarg1, StringsVector jarg1_, long jarg2);
  public final static native boolean StringsVector_isEmpty(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_clear(long jarg1, StringsVector jarg1_);
  public final static native void StringsVector_add(long jarg1, StringsVector jarg1_, String jarg2);
  public final static native String StringsVector_get(long jarg1, StringsVector jarg1_, int jarg2);
  public final static native void StringsVector_set(long jarg1, StringsVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringsVector(long jarg1);
  public final static native void TorrentFile_path_set(long jarg1, TorrentFile jarg1_, long jarg2, StringsVector jarg2_);
  public final static native long TorrentFile_path_get(long jarg1, TorrentFile jarg1_);
  public final static native void TorrentFile_size_set(long jarg1, TorrentFile jarg1_, long jarg2);
  public final static native long TorrentFile_size_get(long jarg1, TorrentFile jarg1_);
  public final static native void TorrentFile_completedSize_set(long jarg1, TorrentFile jarg1_, long jarg2);
  public final static native long TorrentFile_completedSize_get(long jarg1, TorrentFile jarg1_);
  public final static native void TorrentFile_wanted_set(long jarg1, TorrentFile jarg1_, boolean jarg2);
  public final static native boolean TorrentFile_wanted_get(long jarg1, TorrentFile jarg1_);
  public final static native void TorrentFile_priority_set(long jarg1, TorrentFile jarg1_, int jarg2);
  public final static native int TorrentFile_priority_get(long jarg1, TorrentFile jarg1_);
  public final static native void TorrentFile_changed_set(long jarg1, TorrentFile jarg1_, boolean jarg2);
  public final static native boolean TorrentFile_changed_get(long jarg1, TorrentFile jarg1_);
  public final static native void delete_TorrentFile(long jarg1);
  public final static native void Peer_address_set(long jarg1, Peer jarg1_, String jarg2);
  public final static native String Peer_address_get(long jarg1, Peer jarg1_);
  public final static native void Peer_downloadSpeed_set(long jarg1, Peer jarg1_, long jarg2);
  public final static native long Peer_downloadSpeed_get(long jarg1, Peer jarg1_);
  public final static native void Peer_uploadSpeed_set(long jarg1, Peer jarg1_, long jarg2);
  public final static native long Peer_uploadSpeed_get(long jarg1, Peer jarg1_);
  public final static native void Peer_progress_set(long jarg1, Peer jarg1_, float jarg2);
  public final static native float Peer_progress_get(long jarg1, Peer jarg1_);
  public final static native void Peer_flags_set(long jarg1, Peer jarg1_, String jarg2);
  public final static native String Peer_flags_get(long jarg1, Peer jarg1_);
  public final static native void Peer_client_set(long jarg1, Peer jarg1_, String jarg2);
  public final static native String Peer_client_get(long jarg1, Peer jarg1_);
  public final static native void delete_Peer(long jarg1);
  public final static native String Torrent_idKey_get();
  public final static native int Torrent_id(long jarg1, Torrent jarg1_);
  public final static native String Torrent_hashString(long jarg1, Torrent jarg1_);
  public final static native String Torrent_name(long jarg1, Torrent jarg1_);
  public final static native int Torrent_status(long jarg1, Torrent jarg1_);
  public final static native String Torrent_errorString(long jarg1, Torrent jarg1_);
  public final static native int Torrent_queuePosition(long jarg1, Torrent jarg1_);
  public final static native long Torrent_totalSize(long jarg1, Torrent jarg1_);
  public final static native long Torrent_completedSize(long jarg1, Torrent jarg1_);
  public final static native long Torrent_leftUntilDone(long jarg1, Torrent jarg1_);
  public final static native long Torrent_sizeWhenDone(long jarg1, Torrent jarg1_);
  public final static native float Torrent_percentDone(long jarg1, Torrent jarg1_);
  public final static native float Torrent_recheckProgress(long jarg1, Torrent jarg1_);
  public final static native int Torrent_eta(long jarg1, Torrent jarg1_);
  public final static native long Torrent_downloadSpeed(long jarg1, Torrent jarg1_);
  public final static native long Torrent_uploadSpeed(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isDownloadSpeedLimited(long jarg1, Torrent jarg1_);
  public final static native int Torrent_downloadSpeedLimit(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isUploadSpeedLimited(long jarg1, Torrent jarg1_);
  public final static native int Torrent_uploadSpeedLimit(long jarg1, Torrent jarg1_);
  public final static native long Torrent_totalDownloaded(long jarg1, Torrent jarg1_);
  public final static native long Torrent_totalUploaded(long jarg1, Torrent jarg1_);
  public final static native float Torrent_ratio(long jarg1, Torrent jarg1_);
  public final static native int Torrent_ratioLimitMode(long jarg1, Torrent jarg1_);
  public final static native float Torrent_ratioLimit(long jarg1, Torrent jarg1_);
  public final static native int Torrent_seeders(long jarg1, Torrent jarg1_);
  public final static native int Torrent_leechers(long jarg1, Torrent jarg1_);
  public final static native int Torrent_peersLimit(long jarg1, Torrent jarg1_);
  public final static native java.util.Date Torrent_addedDate(long jarg1, Torrent jarg1_);
  public final static native java.util.Date Torrent_activityDate(long jarg1, Torrent jarg1_);
  public final static native java.util.Date Torrent_doneDate(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_honorSessionLimits(long jarg1, Torrent jarg1_);
  public final static native int Torrent_bandwidthPriority(long jarg1, Torrent jarg1_);
  public final static native int Torrent_idleSeedingLimitMode(long jarg1, Torrent jarg1_);
  public final static native int Torrent_idleSeedingLimit(long jarg1, Torrent jarg1_);
  public final static native String Torrent_downloadDirectory(long jarg1, Torrent jarg1_);
  public final static native String Torrent_creator(long jarg1, Torrent jarg1_);
  public final static native java.util.Date Torrent_creationDate(long jarg1, Torrent jarg1_);
  public final static native String Torrent_comment(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isFilesEnabled(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isFilesLoaded(long jarg1, Torrent jarg1_);
  public final static native long Torrent_files(long jarg1, Torrent jarg1_);
  public final static native long Torrent_trackers(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isPeersEnabled(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isPeersLoaded(long jarg1, Torrent jarg1_);
  public final static native long Torrent_peers(long jarg1, Torrent jarg1_);
  public final static native boolean Torrent_isChanged(long jarg1, Torrent jarg1_);
  public final static native void delete_Torrent(long jarg1);
  public final static native int Tracker_id(long jarg1, Tracker jarg1_);
  public final static native String Tracker_announce(long jarg1, Tracker jarg1_);
  public final static native String Tracker_site(long jarg1, Tracker jarg1_);
  public final static native int Tracker_status(long jarg1, Tracker jarg1_);
  public final static native String Tracker_errorMessage(long jarg1, Tracker jarg1_);
  public final static native int Tracker_peers(long jarg1, Tracker jarg1_);
  public final static native int Tracker_nextUpdate(long jarg1, Tracker jarg1_);
  public final static native void delete_Tracker(long jarg1);
  public final static native long BaseRpc_serverSettings(long jarg1, BaseRpc jarg1_);
  public final static native long BaseRpc_serverStats(long jarg1, BaseRpc jarg1_);
  public final static native long BaseRpc_torrents(long jarg1, BaseRpc jarg1_);
  public final static native long BaseRpc_torrentByHash(long jarg1, BaseRpc jarg1_, String jarg2);
  public final static native long BaseRpc_torrentById(long jarg1, BaseRpc jarg1_, int jarg2);
  public final static native boolean BaseRpc_isConnected(long jarg1, BaseRpc jarg1_);
  public final static native int BaseRpc_status(long jarg1, BaseRpc jarg1_);
  public final static native int BaseRpc_error(long jarg1, BaseRpc jarg1_);
  public final static native boolean BaseRpc_isLocal(long jarg1, BaseRpc jarg1_);
  public final static native int BaseRpc_torrentsCount(long jarg1, BaseRpc jarg1_);
  public final static native boolean BaseRpc_backgroundUpdate(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_setBackgroundUpdate(long jarg1, BaseRpc jarg1_, boolean jarg2);
  public final static native boolean BaseRpc_isUpdateDisabled(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_setUpdateDisabled(long jarg1, BaseRpc jarg1_, boolean jarg2);
  public final static native void BaseRpc_resetServer(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_connect(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_disconnect(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_addTorrentFile(long jarg1, BaseRpc jarg1_, byte[] jarg2, String jarg3, int[] jarg4, int[] jarg5, int[] jarg6, int[] jarg7, int[] jarg8, int jarg9, boolean jarg10);
  public final static native void BaseRpc_addTorrentLink(long jarg1, BaseRpc jarg1_, String jarg2, String jarg3, int jarg4, boolean jarg5);
  public final static native void BaseRpc_startTorrents(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_startTorrentsNow(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_pauseTorrents(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_removeTorrents(long jarg1, BaseRpc jarg1_, int[] jarg2, boolean jarg3);
  public final static native void BaseRpc_checkTorrents(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_moveTorrentsToTop(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_moveTorrentsUp(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_moveTorrentsDown(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_moveTorrentsToBottom(long jarg1, BaseRpc jarg1_, int[] jarg2);
  public final static native void BaseRpc_setTorrentLocation(long jarg1, BaseRpc jarg1_, int jarg2, String jarg3, boolean jarg4);
  public final static native void BaseRpc_getTorrentFiles(long jarg1, BaseRpc jarg1_, int jarg2, boolean jarg3);
  public final static native void BaseRpc_getTorrentPeers(long jarg1, BaseRpc jarg1_, int jarg2, boolean jarg3);
  public final static native void BaseRpc_renameTorrentFile(long jarg1, BaseRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void BaseRpc_getDownloadDirFreeSpace(long jarg1, BaseRpc jarg1_);
  public final static native void BaseRpc_getFreeSpaceForPath(long jarg1, BaseRpc jarg1_, String jarg2);
  public final static native void delete_BaseRpc(long jarg1);
  public final static native void ServerSettings_setRpc(long jarg1, ServerSettings jarg1_, long jarg2, BaseRpc jarg2_);
  public final static native int ServerSettings_rpcVersion(long jarg1, ServerSettings jarg1_);
  public final static native int ServerSettings_minimumRpcVersion(long jarg1, ServerSettings jarg1_);
  public final static native boolean ServerSettings_canRenameFiles(long jarg1, ServerSettings jarg1_);
  public final static native boolean ServerSettings_canShowFreeSpaceForPath(long jarg1, ServerSettings jarg1_);
  public final static native String ServerSettings_downloadDirectory(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDownloadDirectory(long jarg1, ServerSettings jarg1_, String jarg2);
  public final static native boolean ServerSettings_startAddedTorrents(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setStartAddedTorrents(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_trashTorrentFiles(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setTrashTorrentFiles(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_renameIncompleteFiles(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setRenameIncompleteFiles(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_isIncompleteDirectoryEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIncompleteDirectoryEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native String ServerSettings_incompleteDirectory(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIncompleteDirectory(long jarg1, ServerSettings jarg1_, String jarg2);
  public final static native boolean ServerSettings_isRatioLimited(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setRatioLimited(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native float ServerSettings_ratioLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setRatioLimit(long jarg1, ServerSettings jarg1_, float jarg2);
  public final static native boolean ServerSettings_isIdleSeedingLimited(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIdleSeedingLimited(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_idleSeedingLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIdleSeedingLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isDownloadQueueEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDownloadQueueEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_downloadQueueSize(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDownloadQueueSize(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isSeedQueueEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setSeedQueueEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_seedQueueSize(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setSeedQueueSize(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isIdleQueueLimited(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIdleQueueLimited(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_idleQueueLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setIdleQueueLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isDownloadSpeedLimited(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDownloadSpeedLimited(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_downloadSpeedLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDownloadSpeedLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isUploadSpeedLimited(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setUploadSpeedLimited(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_uploadSpeedLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setUploadSpeedLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isAlternativeSpeedLimitsEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeSpeedLimitsEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_alternativeDownloadSpeedLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeDownloadSpeedLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native int ServerSettings_alternativeUploadSpeedLimit(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeUploadSpeedLimit(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isAlternativeSpeedLimitsScheduled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeSpeedLimitsScheduled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_alternativeSpeedLimitsBeginTime(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeSpeedLimitsBeginTime(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native int ServerSettings_alternativeSpeedLimitsEndTime(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeSpeedLimitsEndTime(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native int ServerSettings_alternativeSpeedLimitsDays(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setAlternativeSpeedLimitsDays(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native int ServerSettings_peerPort(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setPeerPort(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isRandomPortEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setRandomPortEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_isPortForwardingEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setPortForwardingEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_encryptionMode(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setEncryptionMode(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_isUtpEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setUtpEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_isPexEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setPexEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_isDhtEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setDhtEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native boolean ServerSettings_isLpdEnabled(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setLpdEnabled(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native int ServerSettings_maximumPeersPerTorrent(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setMaximumPeersPerTorrent(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native int ServerSettings_maximumPeersGlobally(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setMaximumPeersGlobally(long jarg1, ServerSettings jarg1_, int jarg2);
  public final static native boolean ServerSettings_saveOnSet(long jarg1, ServerSettings jarg1_);
  public final static native void ServerSettings_setSaveOnSet(long jarg1, ServerSettings jarg1_, boolean jarg2);
  public final static native void delete_ServerSettings(long jarg1);
  public final static native long SessionStats_downloaded_get(long jarg1, SessionStats jarg1_);
  public final static native long SessionStats_uploaded_get(long jarg1, SessionStats jarg1_);
  public final static native int SessionStats_duration_get(long jarg1, SessionStats jarg1_);
  public final static native int SessionStats_sessionCount_get(long jarg1, SessionStats jarg1_);
  public final static native void delete_SessionStats(long jarg1);
  public final static native long ServerStats_downloadSpeed(long jarg1, ServerStats jarg1_);
  public final static native long ServerStats_uploadSpeed(long jarg1, ServerStats jarg1_);
  public final static native long ServerStats_currentSession(long jarg1, ServerStats jarg1_);
  public final static native long ServerStats_total(long jarg1, ServerStats jarg1_);
  public final static native void delete_ServerStats(long jarg1);
  public final static native void JniServerSettings_setDownloadDirectory(long jarg1, JniServerSettings jarg1_, String jarg2);
  public final static native void JniServerSettings_setStartAddedTorrents(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setTrashTorrentFiles(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setRenameIncompleteFiles(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setIncompleteDirectoryEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setIncompleteDirectory(long jarg1, JniServerSettings jarg1_, String jarg2);
  public final static native void JniServerSettings_setRatioLimited(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setRatioLimit(long jarg1, JniServerSettings jarg1_, float jarg2);
  public final static native void JniServerSettings_setIdleSeedingLimited(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setIdleSeedingLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setDownloadQueueEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setDownloadQueueSize(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setSeedQueueEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setSeedQueueSize(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setIdleQueueLimited(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setIdleQueueLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setDownloadSpeedLimited(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setDownloadSpeedLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setUploadSpeedLimited(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setUploadSpeedLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setAlternativeSpeedLimitsEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setAlternativeDownloadSpeedLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setAlternativeUploadSpeedLimit(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setAlternativeSpeedLimitsScheduled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setAlternativeSpeedLimitsBeginTime(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setAlternativeSpeedLimitsEndTime(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setAlternativeSpeedLimitsDays(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setPeerPort(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setRandomPortEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setPortForwardingEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setEncryptionMode(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setUtpEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setPexEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setDhtEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setLpdEnabled(long jarg1, JniServerSettings jarg1_, boolean jarg2);
  public final static native void JniServerSettings_setMaximumPeersPerTorrent(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void JniServerSettings_setMaximumPeersGlobally(long jarg1, JniServerSettings jarg1_, int jarg2);
  public final static native void delete_JniServerSettings(long jarg1);
  public final static native long new_JniRpc();
  public final static native long JniRpc_serverSettings(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_setServer(long jarg1, JniRpc jarg1_, String jarg2, String jarg3, int jarg4, String jarg5, boolean jarg6, boolean jarg7, byte[] jarg8, boolean jarg9, byte[] jarg10, boolean jarg11, String jarg12, String jarg13, int jarg14, int jarg15, int jarg16);
  public final static native void JniRpc_resetServer(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_connect(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_disconnect(long jarg1, JniRpc jarg1_);
  public final static native boolean JniRpc_backgroundUpdate(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_setBackgroundUpdate(long jarg1, JniRpc jarg1_, boolean jarg2);
  public final static native boolean JniRpc_isUpdateDisabled(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_setUpdateDisabled(long jarg1, JniRpc jarg1_, boolean jarg2);
  public final static native void JniRpc_addTorrentFile(long jarg1, JniRpc jarg1_, byte[] jarg2, String jarg3, int[] jarg4, int[] jarg5, int[] jarg6, int[] jarg7, int[] jarg8, int jarg9, boolean jarg10);
  public final static native void JniRpc_addTorrentLink(long jarg1, JniRpc jarg1_, String jarg2, String jarg3, int jarg4, boolean jarg5);
  public final static native void JniRpc_startTorrents(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_startTorrentsNow(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_pauseTorrents(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_removeTorrents(long jarg1, JniRpc jarg1_, int[] jarg2, boolean jarg3);
  public final static native void JniRpc_checkTorrents(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_moveTorrentsToTop(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_moveTorrentsUp(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_moveTorrentsDown(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_moveTorrentsToBottom(long jarg1, JniRpc jarg1_, int[] jarg2);
  public final static native void JniRpc_setTorrentLocation(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, boolean jarg4);
  public final static native void JniRpc_getTorrentFiles(long jarg1, JniRpc jarg1_, int jarg2, boolean jarg3);
  public final static native void JniRpc_getTorrentPeers(long jarg1, JniRpc jarg1_, int jarg2, boolean jarg3);
  public final static native void JniRpc_renameTorrentFile(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_getDownloadDirFreeSpace(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_getFreeSpaceForPath(long jarg1, JniRpc jarg1_, String jarg2);
  public final static native void JniRpc_setTorrentDownloadSpeedLimited(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentDownloadSpeedLimit(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentUploadSpeedLimited(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentUploadSpeedLimit(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentRatioLimitMode(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentRatioLimit(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, float jarg3);
  public final static native void JniRpc_setTorrentPeersLimit(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentHonorSessionLimits(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentBandwidthPriority(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentIdleSeedingLimitMode(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentIdleSeedingLimit(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3);
  public final static native void JniRpc_setTorrentFilesEnabled(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, boolean jarg3);
  public final static native void JniRpc_setTorrentFilesWanted(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int[] jarg3, boolean jarg4);
  public final static native void JniRpc_setTorrentFilesPriority(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int[] jarg3, int jarg4);
  public final static native void JniRpc_torrentRenameFile(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, String jarg3, String jarg4);
  public final static native void JniRpc_torrentAddTracker(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, String jarg3);
  public final static native void JniRpc_torrentSetTracker(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int jarg3, String jarg4);
  public final static native void JniRpc_torrentRemoveTrackers(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, int[] jarg3);
  public final static native void JniRpc_setTorrentPeersEnabled(long jarg1, JniRpc jarg1_, long jarg2, Torrent jarg2_, boolean jarg3);
  public final static native void JniRpc_onAboutToDisconnect(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onAboutToDisconnectSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onConnectedChanged(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onConnectedChangedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onStatusChanged(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onStatusChangedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onErrorChanged(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onErrorChangedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentsUpdated(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentsUpdatedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onServerStatsUpdated(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onServerStatsUpdatedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentAdded(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentAddedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentFinished(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentFinishedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentAddDuplicate(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentAddDuplicateSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentAddError(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onTorrentAddErrorSwigExplicitJniRpc(long jarg1, JniRpc jarg1_);
  public final static native void JniRpc_onGotTorrentFiles(long jarg1, JniRpc jarg1_, int jarg2);
  public final static native void JniRpc_onGotTorrentFilesSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, int jarg2);
  public final static native void JniRpc_onTorrentFileRenamed(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onTorrentFileRenamedSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void JniRpc_onGotTorrentPeers(long jarg1, JniRpc jarg1_, int jarg2);
  public final static native void JniRpc_onGotTorrentPeersSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, int jarg2);
  public final static native void JniRpc_onGotDownloadDirFreeSpace(long jarg1, JniRpc jarg1_, long jarg2);
  public final static native void JniRpc_onGotDownloadDirFreeSpaceSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, long jarg2);
  public final static native void JniRpc_onGotFreeSpaceForPath(long jarg1, JniRpc jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native void JniRpc_onGotFreeSpaceForPathSwigExplicitJniRpc(long jarg1, JniRpc jarg1_, String jarg2, boolean jarg3, long jarg4);
  public final static native void delete_JniRpc(long jarg1);
  public final static native void JniRpc_director_connect(JniRpc obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void JniRpc_change_ownership(JniRpc obj, long cptr, boolean take_or_release);
  public final static native long new_JniWrapper(long jarg1, JniRpc jarg1_);
  public final static native void delete_JniWrapper(long jarg1);
  public final static native long JniServerSettings_SWIGUpcast(long jarg1);
  public final static native long JniRpc_SWIGUpcast(long jarg1);

  public static void SwigDirector_JniRpc_onAboutToDisconnect(JniRpc jself) {
    jself.onAboutToDisconnect();
  }
  public static void SwigDirector_JniRpc_onConnectedChanged(JniRpc jself) {
    jself.onConnectedChanged();
  }
  public static void SwigDirector_JniRpc_onStatusChanged(JniRpc jself) {
    jself.onStatusChanged();
  }
  public static void SwigDirector_JniRpc_onErrorChanged(JniRpc jself) {
    jself.onErrorChanged();
  }
  public static void SwigDirector_JniRpc_onTorrentsUpdated(JniRpc jself) {
    jself.onTorrentsUpdated();
  }
  public static void SwigDirector_JniRpc_onServerStatsUpdated(JniRpc jself) {
    jself.onServerStatsUpdated();
  }
  public static void SwigDirector_JniRpc_onTorrentAdded(JniRpc jself, int id, String hashString, String name) {
    jself.onTorrentAdded(id, hashString, name);
  }
  public static void SwigDirector_JniRpc_onTorrentFinished(JniRpc jself, int id, String hashString, String name) {
    jself.onTorrentFinished(id, hashString, name);
  }
  public static void SwigDirector_JniRpc_onTorrentAddDuplicate(JniRpc jself) {
    jself.onTorrentAddDuplicate();
  }
  public static void SwigDirector_JniRpc_onTorrentAddError(JniRpc jself) {
    jself.onTorrentAddError();
  }
  public static void SwigDirector_JniRpc_onGotTorrentFiles(JniRpc jself, int torrentId) {
    jself.onGotTorrentFiles(torrentId);
  }
  public static void SwigDirector_JniRpc_onTorrentFileRenamed(JniRpc jself, int torrentId, String filePath, String newName) {
    jself.onTorrentFileRenamed(torrentId, filePath, newName);
  }
  public static void SwigDirector_JniRpc_onGotTorrentPeers(JniRpc jself, int torrentId) {
    jself.onGotTorrentPeers(torrentId);
  }
  public static void SwigDirector_JniRpc_onGotDownloadDirFreeSpace(JniRpc jself, long bytes) {
    jself.onGotDownloadDirFreeSpace(bytes);
  }
  public static void SwigDirector_JniRpc_onGotFreeSpaceForPath(JniRpc jself, String path, boolean success, long bytes) {
    jself.onGotFreeSpaceForPath(path, success, bytes);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
